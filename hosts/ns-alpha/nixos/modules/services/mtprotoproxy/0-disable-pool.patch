diff --git a/mtprotoproxy.py b/mtprotoproxy.py
index f9c1b5e..c5d105a 100755
--- a/mtprotoproxy.py
+++ b/mtprotoproxy.py
@@ -510,27 +510,27 @@ class TgConnectionPool:
             self.pools[(host, port, init_func)].append(connect_task)
 
     async def get_connection(self, host, port, init_func=None):
-        self.register_host_port(host, port, init_func)
-
-        ret = None
-        for task in self.pools[(host, port, init_func)][::]:
-            if task.done():
-                if task.exception():
-                    self.pools[(host, port, init_func)].remove(task)
-                    continue
-
-                reader, writer, *other = task.result()
-                if writer.transport.is_closing():
-                    self.pools[(host, port, init_func)].remove(task)
-                    continue
-
-                if not ret:
-                    self.pools[(host, port, init_func)].remove(task)
-                    ret = (reader, writer, *other)
-
-        self.register_host_port(host, port, init_func)
-        if ret:
-            return ret
+        # self.register_host_port(host, port, init_func)
+        #
+        # ret = None
+        # for task in self.pools[(host, port, init_func)][::]:
+        #     if task.done():
+        #         if task.exception():
+        #             self.pools[(host, port, init_func)].remove(task)
+        #             continue
+        #
+        #         reader, writer, *other = task.result()
+        #         if writer.transport.is_closing():
+        #             self.pools[(host, port, init_func)].remove(task)
+        #             continue
+        #
+        #         if not ret:
+        #             self.pools[(host, port, init_func)].remove(task)
+        #             ret = (reader, writer, *other)
+        #
+        # self.register_host_port(host, port, init_func)
+        # if ret:
+        #     return ret
         return await self.open_tg_connection(host, port, init_func)
 
 
